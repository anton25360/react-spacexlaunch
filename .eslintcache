[{"C:\\Dev\\react-spacexlaunch\\src\\reportWebVitals.js":"1","C:\\Dev\\react-spacexlaunch\\src\\index.js":"2","C:\\Dev\\react-spacexlaunch\\src\\App.js":"3","C:\\Dev\\react-spacexlaunch\\src\\Navbar.js":"4"},{"size":362,"mtime":1607422115512,"results":"5","hashOfConfig":"6"},{"size":517,"mtime":1607426030741,"results":"7","hashOfConfig":"6"},{"size":1617,"mtime":1607530612503,"results":"8","hashOfConfig":"6"},{"size":614,"mtime":1607430598703,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k9lh05",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dev\\react-spacexlaunch\\src\\reportWebVitals.js",[],"C:\\Dev\\react-spacexlaunch\\src\\index.js",[],"C:\\Dev\\react-spacexlaunch\\src\\App.js",["19","20","21","22","23","24"],"import \"./App.css\";\r\nimport image from \"./assets/img/launch-home.png\";\r\nimport Navbar from \"./Navbar\";\r\nimport sort from \"./assets/icon/sort.png\";\r\nimport select from \"./assets/icon/select.png\";\r\nimport React, { useState } from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nlet isAscending = true;\r\n\r\nfunction switchSort() {\r\n  let btn = document.getElementById(\"btnSort\");\r\n\r\n  if (isAscending == true) {\r\n    btn.innerText = \"Sort Descending\";\r\n    isAscending = false;\r\n  } else if (isAscending == false) {\r\n    btn.innerText = \"Sort Ascending\";\r\n    isAscending = true;\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"appContainer\">\r\n          <img className=\"appImage\" src={image} alt=\"rocket launch\" />\r\n          <div className=\"appTest\">\r\n            <div className=\"appButtonsContainer\">\r\n              <button className=\"appButton\">\r\n                Filter by Year <img src={select} />\r\n              </button>\r\n              <button className=\"appButton\" onClick={() => switchSort()}>\r\n                <span id=\"btnSort\">Sort Ascending</span>{\" \"}\r\n                <img className=\"appButtonSortIcon\" src={sort} />\r\n              </button>\r\n            </div>\r\n            <div className=\"appContent\">\r\n              <p>hellotherebro</p>\r\n              <p>hellotherebro</p>\r\n              <p>hellotherebro</p>\r\n              <p>hellotherebro</p>\r\n              <p>hellotherebro</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Dev\\react-spacexlaunch\\src\\Navbar.js",["25","26"],{"ruleId":"27","severity":1,"message":"28","line":6,"column":17,"nodeType":"29","messageId":"30","endLine":6,"endColumn":25},{"ruleId":"27","severity":1,"message":"31","line":7,"column":10,"nodeType":"29","messageId":"30","endLine":7,"endColumn":16},{"ruleId":"32","severity":1,"message":"33","line":14,"column":19,"nodeType":"34","messageId":"35","endLine":14,"endColumn":21},{"ruleId":"32","severity":1,"message":"33","line":17,"column":26,"nodeType":"34","messageId":"35","endLine":17,"endColumn":28},{"ruleId":"36","severity":1,"message":"37","line":33,"column":32,"nodeType":"38","endLine":33,"endColumn":52},{"ruleId":"36","severity":1,"message":"37","line":37,"column":17,"nodeType":"38","endLine":37,"endColumn":65},{"ruleId":"36","severity":1,"message":"37","line":13,"column":9,"nodeType":"38","endLine":13,"endColumn":55},{"ruleId":"36","severity":1,"message":"37","line":17,"column":21,"nodeType":"38","endLine":17,"endColumn":70},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]